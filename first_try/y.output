Rules useless in parser due to conflicts

    7 CompUnitOpt: CompUnit

  101 AddExp: MulExp

  104 MulExp: UnaryExp


State 3 conflicts: 4 reduce/reduce
State 4 conflicts: 2 shift/reduce
State 42 conflicts: 2 shift/reduce, 11 reduce/reduce
State 43 conflicts: 1 shift/reduce, 12 reduce/reduce
State 87 conflicts: 2 shift/reduce
State 88 conflicts: 2 shift/reduce
State 90 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce


Grammar

    0 $accept: line_list $end

    1 line_list: line
    2          | line_list line

    3 line: CompUnit

    4 $@1: ε

    5 CompUnit: CompUnitOpt $@1 FuncDef
    6         | CompUnitOpt Decl

    7 CompUnitOpt: CompUnit
    8            | ε

    9 Decl: ConstDecl
   10     | VarDecl

   11 ConstDecl: CONST BType ConstDef ConstDefTail END

   12 ConstDef: IDENT ConstExpTail ASSIGN ConstInitVal

   13 ConstExp: AddExp

   14 ConstExpTail: LBRACKET ConstExp RBRACKET ConstExpTail
   15             | ε

   16 ConstInitVal: ConstExp
   17             | LBRACE ConstInitValOpt RBRACE

   18 ConstInitValOpt: ConstInitVal ConstInitValTail
   19                | ε

   20 ConstInitValTail: COMMA ConstInitVal ConstInitValTail
   21                 | ε

   22 ConstDefTail: COMMA ConstDef ConstDefTail
   23             | ε

   24 VarDecl: BType VarDef VarDeclTail END

   25 VarDeclTail: COMMA VarDef VarDeclTail
   26            | ε

   27 VarDef: IDENT ConstExpTail
   28       | IDENT ConstExpTail ASSIGN InitVal

   29 InitVal: Exp
   30        | LBRACE InitValOpt RBRACE

   31 InitValOpt: InitVal InitValTail
   32           | ε

   33 InitValTail: COMMA InitVal InitValTail
   34            | ε

   35 $@2: ε

   36 $@3: ε

   37 FuncDef: FuncType IDENT LPARENT $@2 FuncFParamsOpt RPARENT $@3 Block

   38 FuncType: VOID
   39         | INT
   40         | FLOAT

   41 BType: INT
   42      | FLOAT

   43 FuncFParams: FuncFParam FuncFParamTail

   44 FuncFParam: BType IDENT ExpOPT

   45 ExpOPT: LBRACKET RBRACKET ExpTail
   46       | ε

   47 ExpTail: LBRACKET Exp RBRACKET ExpTail
   48        | ε

   49 FuncFParamTail: COMMA FuncFParam FuncFParamTail
   50               | ε

   51 FuncFParamsOpt: FuncFParams
   52               | ε

   53 Stmt: LVal ASSIGN Exp END
   54     | ExpOpt END
   55     | Block
   56     | IF LPARENT Cond RPARENT Stmt StmtOpt
   57     | WHILE LPARENT Cond RPARENT Stmt
   58     | BREAK END
   59     | CONTINUE END
   60     | RETURN ExpOpt END

   61 StmtOpt: ELSE Stmt
   62        | ε

   63 Block: LBRACE BlockItemTail RBRACE

   64 BlockItem: Decl
   65          | Stmt

   66 BlockItemTail: BlockItem BlockItemTail
   67              | ε

   68 PrimaryExp: LPARENT Exp RPARENT
   69           | LVal
   70           | INTCONST
   71           | FLOATCONST

   72 Exp: AddExp

   73 ExpOpt: Exp
   74       | ε

   75 Cond: LOrExp

   76 AddExp: MulExp AddExpTail

   77 AddExpTail: PLUS MulExp AddExpTail
   78           | MINUS MulExp AddExpTail
   79           | ε

   80 MulExp: UnaryExp MulExpTail

   81 MulExpTail: MUL UnaryExp MulExpTail
   82           | ε

   83 UnaryExp: PrimaryExp
   84         | IDENT LPARENT FuncRParamsOpt RPARENT
   85         | UNARYOP UnaryExp

   86 FuncRParamsOpt: ε
   87               | FuncRParams

   88 FuncRParams: Exp
   89            | Exp COMMA FuncRParams

   90 LVal: IDENT LValTail

   91 LValTail: LBRACKET Exp RBRACKET LValTail
   92         | ε

   93 LOrExp: LAndExp
   94       | LOrExp OR LAndExp

   95 LAndExp: EqExp
   96        | LAndExp AND EqExp

   97 EqExp: RelExp
   98      | EqExp EQUAL RelExp

   99 RelExp: AddExp
  100       | RelExp WEIGHT AddExp

  101 AddExp: MulExp
  102       | AddExp PLUS MulExp
  103       | AddExp MINUS MulExp

  104 MulExp: UnaryExp
  105       | MulExp MUL UnaryExp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTCONST <ival> (258) 70
    FLOATCONST <fval> (259) 71
    INT <strval> (260) 39 41
    VOID <strval> (261) 38
    FLOAT <strval> (262) 40 42
    IDENT <strval> (263) 12 27 28 37 44 84 90
    PLUS <strval> (264) 77 102
    MINUS <strval> (265) 78 103
    ASSIGN <strval> (266) 12 28 53
    MUL <strval> (267) 81 105
    UNARYOP <strval> (268) 85
    CONST <strval> (269) 11
    COMMA <strval> (270) 20 22 25 33 49 89
    EQUAL <strval> (271) 98
    OR <strval> (272) 94
    AND <strval> (273) 96
    WEIGHT <strval> (274) 100
    IF <strval> (275) 56
    ELSE <strval> (276) 61
    WHILE <strval> (277) 57
    BREAK <strval> (278) 58
    CONTINUE <strval> (279) 59
    RETURN <strval> (280) 60
    LPARENT <strval> (281) 37 56 57 68 84
    RPARENT <strval> (282) 37 56 57 68 84
    LBRACKET <strval> (283) 14 45 47 91
    RBRACKET <strval> (284) 14 45 47 91
    LBRACE <strval> (285) 17 30 63
    RBRACE <strval> (286) 17 30 63
    END <strval> (287) 11 24 53 54 58 59 60


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    line_list (34)
        on left: 1 2
        on right: 0 2
    line (35)
        on left: 3
        on right: 1 2
    CompUnit (36)
        on left: 5 6
        on right: 3 7
    $@1 (37)
        on left: 4
        on right: 5
    CompUnitOpt (38)
        on left: 7 8
        on right: 5 6
    Decl (39)
        on left: 9 10
        on right: 6 64
    ConstDecl (40)
        on left: 11
        on right: 9
    ConstDef (41)
        on left: 12
        on right: 11 22
    ConstExp (42)
        on left: 13
        on right: 14 16
    ConstExpTail (43)
        on left: 14 15
        on right: 12 14 27 28
    ConstInitVal (44)
        on left: 16 17
        on right: 12 18 20
    ConstInitValOpt (45)
        on left: 18 19
        on right: 17
    ConstInitValTail (46)
        on left: 20 21
        on right: 18 20
    ConstDefTail (47)
        on left: 22 23
        on right: 11 22
    VarDecl (48)
        on left: 24
        on right: 10
    VarDeclTail (49)
        on left: 25 26
        on right: 24 25
    VarDef (50)
        on left: 27 28
        on right: 24 25
    InitVal (51)
        on left: 29 30
        on right: 28 31 33
    InitValOpt (52)
        on left: 31 32
        on right: 30
    InitValTail (53)
        on left: 33 34
        on right: 31 33
    FuncDef (54)
        on left: 37
        on right: 5
    $@2 (55)
        on left: 35
        on right: 37
    $@3 (56)
        on left: 36
        on right: 37
    FuncType <strval> (57)
        on left: 38 39 40
        on right: 37
    BType (58)
        on left: 41 42
        on right: 11 24 44
    FuncFParams (59)
        on left: 43
        on right: 51
    FuncFParam (60)
        on left: 44
        on right: 43 49
    ExpOPT (61)
        on left: 45 46
        on right: 44
    ExpTail (62)
        on left: 47 48
        on right: 45 47
    FuncFParamTail (63)
        on left: 49 50
        on right: 43 49
    FuncFParamsOpt (64)
        on left: 51 52
        on right: 37
    Stmt (65)
        on left: 53 54 55 56 57 58 59 60
        on right: 56 57 61 65
    StmtOpt (66)
        on left: 61 62
        on right: 56
    Block (67)
        on left: 63
        on right: 37 55
    BlockItem (68)
        on left: 64 65
        on right: 66
    BlockItemTail (69)
        on left: 66 67
        on right: 63 66
    PrimaryExp (70)
        on left: 68 69 70 71
        on right: 83
    Exp (71)
        on left: 72
        on right: 29 47 53 68 73 88 89 91
    ExpOpt (72)
        on left: 73 74
        on right: 54 60
    Cond (73)
        on left: 75
        on right: 56 57
    AddExp (74)
        on left: 76 101 102 103
        on right: 13 72 99 100 102 103
    AddExpTail (75)
        on left: 77 78 79
        on right: 76 77 78
    MulExp (76)
        on left: 80 104 105
        on right: 76 77 78 101 102 103 105
    MulExpTail (77)
        on left: 81 82
        on right: 80 81
    UnaryExp (78)
        on left: 83 84 85
        on right: 80 81 85 104 105
    FuncRParamsOpt (79)
        on left: 86 87
        on right: 84
    FuncRParams (80)
        on left: 88 89
        on right: 87 89
    LVal (81)
        on left: 90
        on right: 53 69
    LValTail (82)
        on left: 91 92
        on right: 90 91
    LOrExp (83)
        on left: 93 94
        on right: 75 94
    LAndExp (84)
        on left: 95 96
        on right: 93 94 96
    EqExp (85)
        on left: 97 98
        on right: 95 96 98
    RelExp (86)
        on left: 99 100
        on right: 97 98 100


State 0

    0 $accept: • line_list $end

    $default  reduce using rule 8 (CompUnitOpt)

    line_list    go to state 1
    line         go to state 2
    CompUnit     go to state 3
    CompUnitOpt  go to state 4


State 1

    0 $accept: line_list • $end
    2 line_list: line_list • line

    $end  shift, and go to state 5

    $default  reduce using rule 8 (CompUnitOpt)

    line         go to state 6
    CompUnit     go to state 3
    CompUnitOpt  go to state 4


State 2

    1 line_list: line •

    $default  reduce using rule 1 (line_list)


State 3

    3 line: CompUnit •
    7 CompUnitOpt: CompUnit •

    INT       reduce using rule 3 (line)
    INT       [reduce using rule 7 (CompUnitOpt)]
    VOID      reduce using rule 3 (line)
    VOID      [reduce using rule 7 (CompUnitOpt)]
    FLOAT     reduce using rule 3 (line)
    FLOAT     [reduce using rule 7 (CompUnitOpt)]
    CONST     reduce using rule 3 (line)
    CONST     [reduce using rule 7 (CompUnitOpt)]
    $default  reduce using rule 3 (line)


State 4

    5 CompUnit: CompUnitOpt • $@1 FuncDef
    6         | CompUnitOpt • Decl

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CONST  shift, and go to state 9

    INT       [reduce using rule 4 ($@1)]
    FLOAT     [reduce using rule 4 ($@1)]
    $default  reduce using rule 4 ($@1)

    $@1        go to state 10
    Decl       go to state 11
    ConstDecl  go to state 12
    VarDecl    go to state 13
    BType      go to state 14


State 5

    0 $accept: line_list $end •

    $default  accept


State 6

    2 line_list: line_list line •

    $default  reduce using rule 2 (line_list)


State 7

   41 BType: INT •

    $default  reduce using rule 41 (BType)


State 8

   42 BType: FLOAT •

    $default  reduce using rule 42 (BType)


State 9

   11 ConstDecl: CONST • BType ConstDef ConstDefTail END

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    BType  go to state 15


State 10

    5 CompUnit: CompUnitOpt $@1 • FuncDef

    INT    shift, and go to state 16
    VOID   shift, and go to state 17
    FLOAT  shift, and go to state 18

    FuncDef   go to state 19
    FuncType  go to state 20


State 11

    6 CompUnit: CompUnitOpt Decl •

    $default  reduce using rule 6 (CompUnit)


State 12

    9 Decl: ConstDecl •

    $default  reduce using rule 9 (Decl)


State 13

   10 Decl: VarDecl •

    $default  reduce using rule 10 (Decl)


State 14

   24 VarDecl: BType • VarDef VarDeclTail END

    IDENT  shift, and go to state 21

    VarDef  go to state 22


State 15

   11 ConstDecl: CONST BType • ConstDef ConstDefTail END

    IDENT  shift, and go to state 23

    ConstDef  go to state 24


State 16

   39 FuncType: INT •

    $default  reduce using rule 39 (FuncType)


State 17

   38 FuncType: VOID •

    $default  reduce using rule 38 (FuncType)


State 18

   40 FuncType: FLOAT •

    $default  reduce using rule 40 (FuncType)


State 19

    5 CompUnit: CompUnitOpt $@1 FuncDef •

    $default  reduce using rule 5 (CompUnit)


State 20

   37 FuncDef: FuncType • IDENT LPARENT $@2 FuncFParamsOpt RPARENT $@3 Block

    IDENT  shift, and go to state 25


State 21

   27 VarDef: IDENT • ConstExpTail
   28       | IDENT • ConstExpTail ASSIGN InitVal

    LBRACKET  shift, and go to state 26

    $default  reduce using rule 15 (ConstExpTail)

    ConstExpTail  go to state 27


State 22

   24 VarDecl: BType VarDef • VarDeclTail END

    COMMA  shift, and go to state 28

    $default  reduce using rule 26 (VarDeclTail)

    VarDeclTail  go to state 29


State 23

   12 ConstDef: IDENT • ConstExpTail ASSIGN ConstInitVal

    LBRACKET  shift, and go to state 26

    $default  reduce using rule 15 (ConstExpTail)

    ConstExpTail  go to state 30


State 24

   11 ConstDecl: CONST BType ConstDef • ConstDefTail END

    COMMA  shift, and go to state 31

    $default  reduce using rule 23 (ConstDefTail)

    ConstDefTail  go to state 32


State 25

   37 FuncDef: FuncType IDENT • LPARENT $@2 FuncFParamsOpt RPARENT $@3 Block

    LPARENT  shift, and go to state 33


State 26

   14 ConstExpTail: LBRACKET • ConstExp RBRACKET ConstExpTail

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    ConstExp    go to state 39
    PrimaryExp  go to state 40
    AddExp      go to state 41
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 27

   27 VarDef: IDENT ConstExpTail •
   28       | IDENT ConstExpTail • ASSIGN InitVal

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 27 (VarDef)


State 28

   25 VarDeclTail: COMMA • VarDef VarDeclTail

    IDENT  shift, and go to state 21

    VarDef  go to state 46


State 29

   24 VarDecl: BType VarDef VarDeclTail • END

    END  shift, and go to state 47


State 30

   12 ConstDef: IDENT ConstExpTail • ASSIGN ConstInitVal

    ASSIGN  shift, and go to state 48


State 31

   22 ConstDefTail: COMMA • ConstDef ConstDefTail

    IDENT  shift, and go to state 23

    ConstDef  go to state 49


State 32

   11 ConstDecl: CONST BType ConstDef ConstDefTail • END

    END  shift, and go to state 50


State 33

   37 FuncDef: FuncType IDENT LPARENT • $@2 FuncFParamsOpt RPARENT $@3 Block

    $default  reduce using rule 35 ($@2)

    $@2  go to state 51


State 34

   70 PrimaryExp: INTCONST •

    $default  reduce using rule 70 (PrimaryExp)


State 35

   71 PrimaryExp: FLOATCONST •

    $default  reduce using rule 71 (PrimaryExp)


State 36

   84 UnaryExp: IDENT • LPARENT FuncRParamsOpt RPARENT
   90 LVal: IDENT • LValTail

    LPARENT   shift, and go to state 52
    LBRACKET  shift, and go to state 53

    $default  reduce using rule 92 (LValTail)

    LValTail  go to state 54


State 37

   85 UnaryExp: UNARYOP • UnaryExp

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    UnaryExp    go to state 55
    LVal        go to state 44


State 38

   68 PrimaryExp: LPARENT • Exp RPARENT

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    Exp         go to state 56
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 39

   14 ConstExpTail: LBRACKET ConstExp • RBRACKET ConstExpTail

    RBRACKET  shift, and go to state 58


State 40

   83 UnaryExp: PrimaryExp •

    $default  reduce using rule 83 (UnaryExp)


State 41

   13 ConstExp: AddExp •
  102 AddExp: AddExp • PLUS MulExp
  103       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 13 (ConstExp)


State 42

   76 AddExp: MulExp • AddExpTail
  101       | MulExp •
  105 MulExp: MulExp • MUL UnaryExp

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MUL    shift, and go to state 63

    PLUS      [reduce using rule 79 (AddExpTail)]
    PLUS      [reduce using rule 101 (AddExp)]
    MINUS     [reduce using rule 79 (AddExpTail)]
    MINUS     [reduce using rule 101 (AddExp)]
    COMMA     reduce using rule 79 (AddExpTail)
    COMMA     [reduce using rule 101 (AddExp)]
    EQUAL     reduce using rule 79 (AddExpTail)
    EQUAL     [reduce using rule 101 (AddExp)]
    OR        reduce using rule 79 (AddExpTail)
    OR        [reduce using rule 101 (AddExp)]
    AND       reduce using rule 79 (AddExpTail)
    AND       [reduce using rule 101 (AddExp)]
    WEIGHT    reduce using rule 79 (AddExpTail)
    WEIGHT    [reduce using rule 101 (AddExp)]
    RPARENT   reduce using rule 79 (AddExpTail)
    RPARENT   [reduce using rule 101 (AddExp)]
    RBRACKET  reduce using rule 79 (AddExpTail)
    RBRACKET  [reduce using rule 101 (AddExp)]
    RBRACE    reduce using rule 79 (AddExpTail)
    RBRACE    [reduce using rule 101 (AddExp)]
    END       reduce using rule 79 (AddExpTail)
    END       [reduce using rule 101 (AddExp)]
    $default  reduce using rule 79 (AddExpTail)

    AddExpTail  go to state 64


State 43

   80 MulExp: UnaryExp • MulExpTail
  104       | UnaryExp •

    MUL  shift, and go to state 65

    PLUS      reduce using rule 82 (MulExpTail)
    PLUS      [reduce using rule 104 (MulExp)]
    MINUS     reduce using rule 82 (MulExpTail)
    MINUS     [reduce using rule 104 (MulExp)]
    MUL       [reduce using rule 82 (MulExpTail)]
    MUL       [reduce using rule 104 (MulExp)]
    COMMA     reduce using rule 82 (MulExpTail)
    COMMA     [reduce using rule 104 (MulExp)]
    EQUAL     reduce using rule 82 (MulExpTail)
    EQUAL     [reduce using rule 104 (MulExp)]
    OR        reduce using rule 82 (MulExpTail)
    OR        [reduce using rule 104 (MulExp)]
    AND       reduce using rule 82 (MulExpTail)
    AND       [reduce using rule 104 (MulExp)]
    WEIGHT    reduce using rule 82 (MulExpTail)
    WEIGHT    [reduce using rule 104 (MulExp)]
    RPARENT   reduce using rule 82 (MulExpTail)
    RPARENT   [reduce using rule 104 (MulExp)]
    RBRACKET  reduce using rule 82 (MulExpTail)
    RBRACKET  [reduce using rule 104 (MulExp)]
    RBRACE    reduce using rule 82 (MulExpTail)
    RBRACE    [reduce using rule 104 (MulExp)]
    END       reduce using rule 82 (MulExpTail)
    END       [reduce using rule 104 (MulExp)]
    $default  reduce using rule 82 (MulExpTail)

    MulExpTail  go to state 66


State 44

   69 PrimaryExp: LVal •

    $default  reduce using rule 69 (PrimaryExp)


State 45

   28 VarDef: IDENT ConstExpTail ASSIGN • InitVal

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 67

    InitVal     go to state 68
    PrimaryExp  go to state 40
    Exp         go to state 69
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 46

   25 VarDeclTail: COMMA VarDef • VarDeclTail

    COMMA  shift, and go to state 28

    $default  reduce using rule 26 (VarDeclTail)

    VarDeclTail  go to state 70


State 47

   24 VarDecl: BType VarDef VarDeclTail END •

    $default  reduce using rule 24 (VarDecl)


State 48

   12 ConstDef: IDENT ConstExpTail ASSIGN • ConstInitVal

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 71

    ConstExp      go to state 72
    ConstInitVal  go to state 73
    PrimaryExp    go to state 40
    AddExp        go to state 41
    MulExp        go to state 42
    UnaryExp      go to state 43
    LVal          go to state 44


State 49

   22 ConstDefTail: COMMA ConstDef • ConstDefTail

    COMMA  shift, and go to state 31

    $default  reduce using rule 23 (ConstDefTail)

    ConstDefTail  go to state 74


State 50

   11 ConstDecl: CONST BType ConstDef ConstDefTail END •

    $default  reduce using rule 11 (ConstDecl)


State 51

   37 FuncDef: FuncType IDENT LPARENT $@2 • FuncFParamsOpt RPARENT $@3 Block

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 52 (FuncFParamsOpt)

    BType           go to state 75
    FuncFParams     go to state 76
    FuncFParam      go to state 77
    FuncFParamsOpt  go to state 78


State 52

   84 UnaryExp: IDENT LPARENT • FuncRParamsOpt RPARENT

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    $default  reduce using rule 86 (FuncRParamsOpt)

    PrimaryExp      go to state 40
    Exp             go to state 79
    AddExp          go to state 57
    MulExp          go to state 42
    UnaryExp        go to state 43
    FuncRParamsOpt  go to state 80
    FuncRParams     go to state 81
    LVal            go to state 44


State 53

   91 LValTail: LBRACKET • Exp RBRACKET LValTail

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    Exp         go to state 82
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 54

   90 LVal: IDENT LValTail •

    $default  reduce using rule 90 (LVal)


State 55

   85 UnaryExp: UNARYOP UnaryExp •

    $default  reduce using rule 85 (UnaryExp)


State 56

   68 PrimaryExp: LPARENT Exp • RPARENT

    RPARENT  shift, and go to state 83


State 57

   72 Exp: AddExp •
  102 AddExp: AddExp • PLUS MulExp
  103       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 72 (Exp)


State 58

   14 ConstExpTail: LBRACKET ConstExp RBRACKET • ConstExpTail

    LBRACKET  shift, and go to state 26

    $default  reduce using rule 15 (ConstExpTail)

    ConstExpTail  go to state 84


State 59

  102 AddExp: AddExp PLUS • MulExp

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    MulExp      go to state 85
    UnaryExp    go to state 43
    LVal        go to state 44


State 60

  103 AddExp: AddExp MINUS • MulExp

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    MulExp      go to state 86
    UnaryExp    go to state 43
    LVal        go to state 44


State 61

   77 AddExpTail: PLUS • MulExp AddExpTail

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    MulExp      go to state 87
    UnaryExp    go to state 43
    LVal        go to state 44


State 62

   78 AddExpTail: MINUS • MulExp AddExpTail

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    MulExp      go to state 88
    UnaryExp    go to state 43
    LVal        go to state 44


State 63

  105 MulExp: MulExp MUL • UnaryExp

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    UnaryExp    go to state 89
    LVal        go to state 44


State 64

   76 AddExp: MulExp AddExpTail •

    $default  reduce using rule 76 (AddExp)


State 65

   81 MulExpTail: MUL • UnaryExp MulExpTail

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    UnaryExp    go to state 90
    LVal        go to state 44


State 66

   80 MulExp: UnaryExp MulExpTail •

    $default  reduce using rule 80 (MulExp)


State 67

   30 InitVal: LBRACE • InitValOpt RBRACE

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 67

    $default  reduce using rule 32 (InitValOpt)

    InitVal     go to state 91
    InitValOpt  go to state 92
    PrimaryExp  go to state 40
    Exp         go to state 69
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 68

   28 VarDef: IDENT ConstExpTail ASSIGN InitVal •

    $default  reduce using rule 28 (VarDef)


State 69

   29 InitVal: Exp •

    $default  reduce using rule 29 (InitVal)


State 70

   25 VarDeclTail: COMMA VarDef VarDeclTail •

    $default  reduce using rule 25 (VarDeclTail)


State 71

   17 ConstInitVal: LBRACE • ConstInitValOpt RBRACE

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 71

    $default  reduce using rule 19 (ConstInitValOpt)

    ConstExp         go to state 72
    ConstInitVal     go to state 93
    ConstInitValOpt  go to state 94
    PrimaryExp       go to state 40
    AddExp           go to state 41
    MulExp           go to state 42
    UnaryExp         go to state 43
    LVal             go to state 44


State 72

   16 ConstInitVal: ConstExp •

    $default  reduce using rule 16 (ConstInitVal)


State 73

   12 ConstDef: IDENT ConstExpTail ASSIGN ConstInitVal •

    $default  reduce using rule 12 (ConstDef)


State 74

   22 ConstDefTail: COMMA ConstDef ConstDefTail •

    $default  reduce using rule 22 (ConstDefTail)


State 75

   44 FuncFParam: BType • IDENT ExpOPT

    IDENT  shift, and go to state 95


State 76

   51 FuncFParamsOpt: FuncFParams •

    $default  reduce using rule 51 (FuncFParamsOpt)


State 77

   43 FuncFParams: FuncFParam • FuncFParamTail

    COMMA  shift, and go to state 96

    $default  reduce using rule 50 (FuncFParamTail)

    FuncFParamTail  go to state 97


State 78

   37 FuncDef: FuncType IDENT LPARENT $@2 FuncFParamsOpt • RPARENT $@3 Block

    RPARENT  shift, and go to state 98


State 79

   88 FuncRParams: Exp •
   89            | Exp • COMMA FuncRParams

    COMMA  shift, and go to state 99

    $default  reduce using rule 88 (FuncRParams)


State 80

   84 UnaryExp: IDENT LPARENT FuncRParamsOpt • RPARENT

    RPARENT  shift, and go to state 100


State 81

   87 FuncRParamsOpt: FuncRParams •

    $default  reduce using rule 87 (FuncRParamsOpt)


State 82

   91 LValTail: LBRACKET Exp • RBRACKET LValTail

    RBRACKET  shift, and go to state 101


State 83

   68 PrimaryExp: LPARENT Exp RPARENT •

    $default  reduce using rule 68 (PrimaryExp)


State 84

   14 ConstExpTail: LBRACKET ConstExp RBRACKET ConstExpTail •

    $default  reduce using rule 14 (ConstExpTail)


State 85

  102 AddExp: AddExp PLUS MulExp •
  105 MulExp: MulExp • MUL UnaryExp

    MUL  shift, and go to state 63

    $default  reduce using rule 102 (AddExp)


State 86

  103 AddExp: AddExp MINUS MulExp •
  105 MulExp: MulExp • MUL UnaryExp

    MUL  shift, and go to state 63

    $default  reduce using rule 103 (AddExp)


State 87

   77 AddExpTail: PLUS MulExp • AddExpTail
  105 MulExp: MulExp • MUL UnaryExp

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MUL    shift, and go to state 63

    PLUS      [reduce using rule 79 (AddExpTail)]
    MINUS     [reduce using rule 79 (AddExpTail)]
    $default  reduce using rule 79 (AddExpTail)

    AddExpTail  go to state 102


State 88

   78 AddExpTail: MINUS MulExp • AddExpTail
  105 MulExp: MulExp • MUL UnaryExp

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MUL    shift, and go to state 63

    PLUS      [reduce using rule 79 (AddExpTail)]
    MINUS     [reduce using rule 79 (AddExpTail)]
    $default  reduce using rule 79 (AddExpTail)

    AddExpTail  go to state 103


State 89

  105 MulExp: MulExp MUL UnaryExp •

    $default  reduce using rule 105 (MulExp)


State 90

   81 MulExpTail: MUL UnaryExp • MulExpTail

    MUL  shift, and go to state 65

    MUL       [reduce using rule 82 (MulExpTail)]
    $default  reduce using rule 82 (MulExpTail)

    MulExpTail  go to state 104


State 91

   31 InitValOpt: InitVal • InitValTail

    COMMA  shift, and go to state 105

    $default  reduce using rule 34 (InitValTail)

    InitValTail  go to state 106


State 92

   30 InitVal: LBRACE InitValOpt • RBRACE

    RBRACE  shift, and go to state 107


State 93

   18 ConstInitValOpt: ConstInitVal • ConstInitValTail

    COMMA  shift, and go to state 108

    $default  reduce using rule 21 (ConstInitValTail)

    ConstInitValTail  go to state 109


State 94

   17 ConstInitVal: LBRACE ConstInitValOpt • RBRACE

    RBRACE  shift, and go to state 110


State 95

   44 FuncFParam: BType IDENT • ExpOPT

    LBRACKET  shift, and go to state 111

    $default  reduce using rule 46 (ExpOPT)

    ExpOPT  go to state 112


State 96

   49 FuncFParamTail: COMMA • FuncFParam FuncFParamTail

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    BType       go to state 75
    FuncFParam  go to state 113


State 97

   43 FuncFParams: FuncFParam FuncFParamTail •

    $default  reduce using rule 43 (FuncFParams)


State 98

   37 FuncDef: FuncType IDENT LPARENT $@2 FuncFParamsOpt RPARENT • $@3 Block

    $default  reduce using rule 36 ($@3)

    $@3  go to state 114


State 99

   89 FuncRParams: Exp COMMA • FuncRParams

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp   go to state 40
    Exp          go to state 79
    AddExp       go to state 57
    MulExp       go to state 42
    UnaryExp     go to state 43
    FuncRParams  go to state 115
    LVal         go to state 44


State 100

   84 UnaryExp: IDENT LPARENT FuncRParamsOpt RPARENT •

    $default  reduce using rule 84 (UnaryExp)


State 101

   91 LValTail: LBRACKET Exp RBRACKET • LValTail

    LBRACKET  shift, and go to state 53

    $default  reduce using rule 92 (LValTail)

    LValTail  go to state 116


State 102

   77 AddExpTail: PLUS MulExp AddExpTail •

    $default  reduce using rule 77 (AddExpTail)


State 103

   78 AddExpTail: MINUS MulExp AddExpTail •

    $default  reduce using rule 78 (AddExpTail)


State 104

   81 MulExpTail: MUL UnaryExp MulExpTail •

    $default  reduce using rule 81 (MulExpTail)


State 105

   33 InitValTail: COMMA • InitVal InitValTail

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 67

    InitVal     go to state 117
    PrimaryExp  go to state 40
    Exp         go to state 69
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 106

   31 InitValOpt: InitVal InitValTail •

    $default  reduce using rule 31 (InitValOpt)


State 107

   30 InitVal: LBRACE InitValOpt RBRACE •

    $default  reduce using rule 30 (InitVal)


State 108

   20 ConstInitValTail: COMMA • ConstInitVal ConstInitValTail

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 71

    ConstExp      go to state 72
    ConstInitVal  go to state 118
    PrimaryExp    go to state 40
    AddExp        go to state 41
    MulExp        go to state 42
    UnaryExp      go to state 43
    LVal          go to state 44


State 109

   18 ConstInitValOpt: ConstInitVal ConstInitValTail •

    $default  reduce using rule 18 (ConstInitValOpt)


State 110

   17 ConstInitVal: LBRACE ConstInitValOpt RBRACE •

    $default  reduce using rule 17 (ConstInitVal)


State 111

   45 ExpOPT: LBRACKET • RBRACKET ExpTail

    RBRACKET  shift, and go to state 119


State 112

   44 FuncFParam: BType IDENT ExpOPT •

    $default  reduce using rule 44 (FuncFParam)


State 113

   49 FuncFParamTail: COMMA FuncFParam • FuncFParamTail

    COMMA  shift, and go to state 96

    $default  reduce using rule 50 (FuncFParamTail)

    FuncFParamTail  go to state 120


State 114

   37 FuncDef: FuncType IDENT LPARENT $@2 FuncFParamsOpt RPARENT $@3 • Block

    LBRACE  shift, and go to state 121

    Block  go to state 122


State 115

   89 FuncRParams: Exp COMMA FuncRParams •

    $default  reduce using rule 89 (FuncRParams)


State 116

   91 LValTail: LBRACKET Exp RBRACKET LValTail •

    $default  reduce using rule 91 (LValTail)


State 117

   33 InitValTail: COMMA InitVal • InitValTail

    COMMA  shift, and go to state 105

    $default  reduce using rule 34 (InitValTail)

    InitValTail  go to state 123


State 118

   20 ConstInitValTail: COMMA ConstInitVal • ConstInitValTail

    COMMA  shift, and go to state 108

    $default  reduce using rule 21 (ConstInitValTail)

    ConstInitValTail  go to state 124


State 119

   45 ExpOPT: LBRACKET RBRACKET • ExpTail

    LBRACKET  shift, and go to state 125

    $default  reduce using rule 48 (ExpTail)

    ExpTail  go to state 126


State 120

   49 FuncFParamTail: COMMA FuncFParam FuncFParamTail •

    $default  reduce using rule 49 (FuncFParamTail)


State 121

   63 Block: LBRACE • BlockItemTail RBRACE

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    CONST       shift, and go to state 9
    IF          shift, and go to state 127
    WHILE       shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 121

    END       reduce using rule 74 (ExpOpt)
    $default  reduce using rule 67 (BlockItemTail)

    Decl           go to state 132
    ConstDecl      go to state 12
    VarDecl        go to state 13
    BType          go to state 14
    Stmt           go to state 133
    Block          go to state 134
    BlockItem      go to state 135
    BlockItemTail  go to state 136
    PrimaryExp     go to state 40
    Exp            go to state 137
    ExpOpt         go to state 138
    AddExp         go to state 57
    MulExp         go to state 42
    UnaryExp       go to state 43
    LVal           go to state 139


State 122

   37 FuncDef: FuncType IDENT LPARENT $@2 FuncFParamsOpt RPARENT $@3 Block •

    $default  reduce using rule 37 (FuncDef)


State 123

   33 InitValTail: COMMA InitVal InitValTail •

    $default  reduce using rule 33 (InitValTail)


State 124

   20 ConstInitValTail: COMMA ConstInitVal ConstInitValTail •

    $default  reduce using rule 20 (ConstInitValTail)


State 125

   47 ExpTail: LBRACKET • Exp RBRACKET ExpTail

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    Exp         go to state 140
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 126

   45 ExpOPT: LBRACKET RBRACKET ExpTail •

    $default  reduce using rule 45 (ExpOPT)


State 127

   56 Stmt: IF • LPARENT Cond RPARENT Stmt StmtOpt

    LPARENT  shift, and go to state 141


State 128

   57 Stmt: WHILE • LPARENT Cond RPARENT Stmt

    LPARENT  shift, and go to state 142


State 129

   58 Stmt: BREAK • END

    END  shift, and go to state 143


State 130

   59 Stmt: CONTINUE • END

    END  shift, and go to state 144


State 131

   60 Stmt: RETURN • ExpOpt END

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    $default  reduce using rule 74 (ExpOpt)

    PrimaryExp  go to state 40
    Exp         go to state 137
    ExpOpt      go to state 145
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 132

   64 BlockItem: Decl •

    $default  reduce using rule 64 (BlockItem)


State 133

   65 BlockItem: Stmt •

    $default  reduce using rule 65 (BlockItem)


State 134

   55 Stmt: Block •

    $default  reduce using rule 55 (Stmt)


State 135

   66 BlockItemTail: BlockItem • BlockItemTail

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    CONST       shift, and go to state 9
    IF          shift, and go to state 127
    WHILE       shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 121

    END       reduce using rule 74 (ExpOpt)
    $default  reduce using rule 67 (BlockItemTail)

    Decl           go to state 132
    ConstDecl      go to state 12
    VarDecl        go to state 13
    BType          go to state 14
    Stmt           go to state 133
    Block          go to state 134
    BlockItem      go to state 135
    BlockItemTail  go to state 146
    PrimaryExp     go to state 40
    Exp            go to state 137
    ExpOpt         go to state 138
    AddExp         go to state 57
    MulExp         go to state 42
    UnaryExp       go to state 43
    LVal           go to state 139


State 136

   63 Block: LBRACE BlockItemTail • RBRACE

    RBRACE  shift, and go to state 147


State 137

   73 ExpOpt: Exp •

    $default  reduce using rule 73 (ExpOpt)


State 138

   54 Stmt: ExpOpt • END

    END  shift, and go to state 148


State 139

   53 Stmt: LVal • ASSIGN Exp END
   69 PrimaryExp: LVal •

    ASSIGN  shift, and go to state 149

    $default  reduce using rule 69 (PrimaryExp)


State 140

   47 ExpTail: LBRACKET Exp • RBRACKET ExpTail

    RBRACKET  shift, and go to state 150


State 141

   56 Stmt: IF LPARENT • Cond RPARENT Stmt StmtOpt

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    Cond        go to state 151
    AddExp      go to state 152
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44
    LOrExp      go to state 153
    LAndExp     go to state 154
    EqExp       go to state 155
    RelExp      go to state 156


State 142

   57 Stmt: WHILE LPARENT • Cond RPARENT Stmt

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    Cond        go to state 157
    AddExp      go to state 152
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44
    LOrExp      go to state 153
    LAndExp     go to state 154
    EqExp       go to state 155
    RelExp      go to state 156


State 143

   58 Stmt: BREAK END •

    $default  reduce using rule 58 (Stmt)


State 144

   59 Stmt: CONTINUE END •

    $default  reduce using rule 59 (Stmt)


State 145

   60 Stmt: RETURN ExpOpt • END

    END  shift, and go to state 158


State 146

   66 BlockItemTail: BlockItem BlockItemTail •

    $default  reduce using rule 66 (BlockItemTail)


State 147

   63 Block: LBRACE BlockItemTail RBRACE •

    $default  reduce using rule 63 (Block)


State 148

   54 Stmt: ExpOpt END •

    $default  reduce using rule 54 (Stmt)


State 149

   53 Stmt: LVal ASSIGN • Exp END

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    Exp         go to state 159
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 150

   47 ExpTail: LBRACKET Exp RBRACKET • ExpTail

    LBRACKET  shift, and go to state 125

    $default  reduce using rule 48 (ExpTail)

    ExpTail  go to state 160


State 151

   56 Stmt: IF LPARENT Cond • RPARENT Stmt StmtOpt

    RPARENT  shift, and go to state 161


State 152

   99 RelExp: AddExp •
  102 AddExp: AddExp • PLUS MulExp
  103       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 99 (RelExp)


State 153

   75 Cond: LOrExp •
   94 LOrExp: LOrExp • OR LAndExp

    OR  shift, and go to state 162

    $default  reduce using rule 75 (Cond)


State 154

   93 LOrExp: LAndExp •
   96 LAndExp: LAndExp • AND EqExp

    AND  shift, and go to state 163

    $default  reduce using rule 93 (LOrExp)


State 155

   95 LAndExp: EqExp •
   98 EqExp: EqExp • EQUAL RelExp

    EQUAL  shift, and go to state 164

    $default  reduce using rule 95 (LAndExp)


State 156

   97 EqExp: RelExp •
  100 RelExp: RelExp • WEIGHT AddExp

    WEIGHT  shift, and go to state 165

    $default  reduce using rule 97 (EqExp)


State 157

   57 Stmt: WHILE LPARENT Cond • RPARENT Stmt

    RPARENT  shift, and go to state 166


State 158

   60 Stmt: RETURN ExpOpt END •

    $default  reduce using rule 60 (Stmt)


State 159

   53 Stmt: LVal ASSIGN Exp • END

    END  shift, and go to state 167


State 160

   47 ExpTail: LBRACKET Exp RBRACKET ExpTail •

    $default  reduce using rule 47 (ExpTail)


State 161

   56 Stmt: IF LPARENT Cond RPARENT • Stmt StmtOpt

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    IF          shift, and go to state 127
    WHILE       shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 121

    $default  reduce using rule 74 (ExpOpt)

    Stmt        go to state 168
    Block       go to state 134
    PrimaryExp  go to state 40
    Exp         go to state 137
    ExpOpt      go to state 138
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 139


State 162

   94 LOrExp: LOrExp OR • LAndExp

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    AddExp      go to state 152
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44
    LAndExp     go to state 169
    EqExp       go to state 155
    RelExp      go to state 156


State 163

   96 LAndExp: LAndExp AND • EqExp

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    AddExp      go to state 152
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44
    EqExp       go to state 170
    RelExp      go to state 156


State 164

   98 EqExp: EqExp EQUAL • RelExp

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    AddExp      go to state 152
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44
    RelExp      go to state 171


State 165

  100 RelExp: RelExp WEIGHT • AddExp

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    LPARENT     shift, and go to state 38

    PrimaryExp  go to state 40
    AddExp      go to state 172
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 44


State 166

   57 Stmt: WHILE LPARENT Cond RPARENT • Stmt

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    IF          shift, and go to state 127
    WHILE       shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 121

    $default  reduce using rule 74 (ExpOpt)

    Stmt        go to state 173
    Block       go to state 134
    PrimaryExp  go to state 40
    Exp         go to state 137
    ExpOpt      go to state 138
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 139


State 167

   53 Stmt: LVal ASSIGN Exp END •

    $default  reduce using rule 53 (Stmt)


State 168

   56 Stmt: IF LPARENT Cond RPARENT Stmt • StmtOpt

    ELSE  shift, and go to state 174

    ELSE      [reduce using rule 62 (StmtOpt)]
    $default  reduce using rule 62 (StmtOpt)

    StmtOpt  go to state 175


State 169

   94 LOrExp: LOrExp OR LAndExp •
   96 LAndExp: LAndExp • AND EqExp

    AND  shift, and go to state 163

    $default  reduce using rule 94 (LOrExp)


State 170

   96 LAndExp: LAndExp AND EqExp •
   98 EqExp: EqExp • EQUAL RelExp

    EQUAL  shift, and go to state 164

    $default  reduce using rule 96 (LAndExp)


State 171

   98 EqExp: EqExp EQUAL RelExp •
  100 RelExp: RelExp • WEIGHT AddExp

    WEIGHT  shift, and go to state 165

    $default  reduce using rule 98 (EqExp)


State 172

  100 RelExp: RelExp WEIGHT AddExp •
  102 AddExp: AddExp • PLUS MulExp
  103       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 100 (RelExp)


State 173

   57 Stmt: WHILE LPARENT Cond RPARENT Stmt •

    $default  reduce using rule 57 (Stmt)


State 174

   61 StmtOpt: ELSE • Stmt

    INTCONST    shift, and go to state 34
    FLOATCONST  shift, and go to state 35
    IDENT       shift, and go to state 36
    UNARYOP     shift, and go to state 37
    IF          shift, and go to state 127
    WHILE       shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 121

    $default  reduce using rule 74 (ExpOpt)

    Stmt        go to state 176
    Block       go to state 134
    PrimaryExp  go to state 40
    Exp         go to state 137
    ExpOpt      go to state 138
    AddExp      go to state 57
    MulExp      go to state 42
    UnaryExp    go to state 43
    LVal        go to state 139


State 175

   56 Stmt: IF LPARENT Cond RPARENT Stmt StmtOpt •

    $default  reduce using rule 56 (Stmt)


State 176

   61 StmtOpt: ELSE Stmt •

    $default  reduce using rule 61 (StmtOpt)
