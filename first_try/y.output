State 192 conflicts: 1 shift/reduce


Grammar

    0 $accept: Root $end

    1 Root: CompUnit

    2 CompUnit: ConstDecl
    3         | VarDecl
    4         | FuncDef
    5         | ConstDecl CompUnit
    6         | VarDecl CompUnit
    7         | FuncDef CompUnit

    8 ConstDecl: CONST INT ConstDef END
    9          | CONST FLOAT ConstDef END

   10 ConstDef: IDENT ConstExpArray ASSIGN ConstInitVal
   11         | IDENT ConstExpArray ASSIGN ConstInitVal COMMA ConstDef

   12 ConstExpArray: ε
   13              | LBRACKET ConstExp RBRACKET ConstExpArray

   14 ConstInitVal: ConstExp
   15             | LBRACE RBRACE
   16             | LBRACE ConstInitVal RBRACE
   17             | LBRACE ConstInitVal COMMA ConstInitVal RBRACE

   18 ConstExp: MulExp
   19         | MulExp PLUS Exp
   20         | MulExp MINUS Exp

   21 VarDecl: INT VarDef END
   22        | FLOAT VarDef END

   23 VarDef: IDENT ConstExpArray
   24       | IDENT ConstExpArray ASSIGN InitVal
   25       | IDENT ConstExpArray COMMA VarDef
   26       | IDENT ConstExpArray ASSIGN InitVal COMMA VarDef

   27 InitVal: Exp
   28        | LBRACE RBRACE
   29        | LBRACE InitVals RBRACE

   30 InitVals: InitVal
   31         | InitVal COMMA InitVals

   32 FuncDef: INT IDENT LPARENT RPARENT Block
   33        | FLOAT IDENT LPARENT RPARENT Block
   34        | VOID IDENT LPARENT RPARENT Block
   35        | INT IDENT LPARENT FuncFParam RPARENT Block
   36        | FLOAT IDENT LPARENT FuncFParam RPARENT Block
   37        | VOID IDENT LPARENT FuncFParam RPARENT Block

   38 FuncFParam: INT IDENT
   39           | FLOAT IDENT
   40           | INT IDENT LBRACKET RBRACKET ExpArray
   41           | FLOAT IDENT LBRACKET RBRACKET ExpArray
   42           | INT IDENT COMMA FuncFParam
   43           | FLOAT IDENT COMMA FuncFParam
   44           | INT IDENT LBRACKET RBRACKET ExpArray COMMA FuncFParam
   45           | FLOAT IDENT LBRACKET RBRACKET ExpArray COMMA FuncFParam

   46 Block: LBRACE BlockItem RBRACE

   47 BlockItem: ε
   48          | ConstDecl BlockItem
   49          | VarDecl BlockItem
   50          | Stmt BlockItem

   51 Stmt: LVal ASSIGN Exp END
   52     | Exp END
   53     | Block
   54     | IF LPARENT Cond RPARENT Stmt
   55     | IF LPARENT Cond RPARENT Stmt ELSE Stmt
   56     | WHILE LPARENT Cond RPARENT Stmt
   57     | BREAK END
   58     | CONTINUE END
   59     | RETURN Exp END
   60     | RETURN END
   61     | error

   62 Exp: AddExp

   63 AddExp: MulExp
   64       | MulExp PLUS AddExp
   65       | MulExp MINUS AddExp

   66 MulExp: UnaryExp
   67       | UnaryExp MUL MulExp
   68       | UnaryExp DIV MulExp
   69       | UnaryExp MOD MulExp

   70 UnaryExp: PrimaryExp
   71         | IDENT LPARENT RPARENT
   72         | IDENT LPARENT FuncRParams RPARENT
   73         | PLUS UnaryExp
   74         | MINUS UnaryExp
   75         | NOT UnaryExp

   76 FuncRParams: Exp
   77            | Exp COMMA FuncRParams

   78 PrimaryExp: LPARENT Exp RPARENT
   79           | LVal
   80           | INTCONST
   81           | FLOATCONST

   82 LVal: IDENT ExpArray

   83 Cond: LOrExp

   84 LOrExp: LAndExp
   85       | LAndExp OR LOrExp

   86 LAndExp: EqExp
   87        | EqExp AND LAndExp

   88 EqExp: RelExp
   89      | RelExp EQUAL EqExp
   90      | RelExp NEQUAL EqExp

   91 RelExp: AddExp
   92       | AddExp LT RelExp
   93       | AddExp GT RelExp
   94       | AddExp LE RelExp
   95       | AddExp GE RelExp

   96 ExpArray: ε
   97         | LBRACKET Exp RBRACKET ExpArray


Terminals, with rules where they appear

    $end (0) 0
    error (256) 61
    IDENT <strval> (258) 10 11 23 24 25 26 32 33 34 35 36 37 38 39 40 41 42 43 44 45 71 72 82
    INTCONST <ival> (259) 80
    FLOATCONST <fval> (260) 81
    INT <int_val> (261) 8 21 32 35 38 40 42 44
    FLOAT <int_val> (262) 9 22 33 36 39 41 43 45
    VOID <int_val> (263) 34 37
    CONST <int_val> (264) 8 9
    RETURN <int_val> (265) 59 60
    IF <int_val> (266) 54 55
    ELSE <int_val> (267) 55
    WHILE <int_val> (268) 56
    BREAK <int_val> (269) 57
    CONTINUE <int_val> (270) 58
    LPARENT <int_val> (271) 32 33 34 35 36 37 54 55 56 71 72 78
    RPARENT <int_val> (272) 32 33 34 35 36 37 54 55 56 71 72 78
    LBRACKET <int_val> (273) 13 40 41 44 45 97
    RBRACKET <int_val> (274) 13 40 41 44 45 97
    LBRACE <int_val> (275) 15 16 17 28 29 46
    RBRACE <int_val> (276) 15 16 17 28 29 46
    COMMA <int_val> (277) 11 17 25 26 31 42 43 44 45 77
    END <int_val> (278) 8 9 21 22 51 52 57 58 59 60
    MINUS <int_val> (279) 20 65 74
    ASSIGN <int_val> (280) 10 11 24 26 51
    PLUS <int_val> (281) 19 64 73
    NOT <int_val> (282) 75
    AND <int_val> (283) 87
    OR <int_val> (284) 85
    LT <int_val> (285) 92
    LE <int_val> (286) 94
    GT <int_val> (287) 93
    GE <int_val> (288) 95
    NEQUAL <int_val> (289) 90
    EQUAL <int_val> (290) 89
    MUL <int_val> (291) 67
    MOD <int_val> (292) 69
    DIV <int_val> (293) 68


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    Root <node_val> (40)
        on left: 1
        on right: 0
    CompUnit <node_val> (41)
        on left: 2 3 4 5 6 7
        on right: 1 5 6 7
    ConstDecl <node_val> (42)
        on left: 8 9
        on right: 2 5 48
    ConstDef <node_val> (43)
        on left: 10 11
        on right: 8 9 11
    ConstExpArray <node_val> (44)
        on left: 12 13
        on right: 10 11 13 23 24 25 26
    ConstInitVal <node_val> (45)
        on left: 14 15 16 17
        on right: 10 11 16 17
    ConstExp <node_val> (46)
        on left: 18 19 20
        on right: 13 14
    VarDecl <node_val> (47)
        on left: 21 22
        on right: 3 6 49
    VarDef <node_val> (48)
        on left: 23 24 25 26
        on right: 21 22 25 26
    InitVal <node_val> (49)
        on left: 27 28 29
        on right: 24 26 30 31
    InitVals <node_val> (50)
        on left: 30 31
        on right: 29 31
    FuncDef <node_val> (51)
        on left: 32 33 34 35 36 37
        on right: 4 7
    FuncFParam <node_val> (52)
        on left: 38 39 40 41 42 43 44 45
        on right: 35 36 37 42 43 44 45
    Block <node_val> (53)
        on left: 46
        on right: 32 33 34 35 36 37 53
    BlockItem <node_val> (54)
        on left: 47 48 49 50
        on right: 46 48 49 50
    Stmt <node_val> (55)
        on left: 51 52 53 54 55 56 57 58 59 60 61
        on right: 50 54 55 56
    Exp <node_val> (56)
        on left: 62
        on right: 19 20 27 51 52 59 76 77 78 97
    AddExp <node_val> (57)
        on left: 63 64 65
        on right: 62 64 65 91 92 93 94 95
    MulExp <node_val> (58)
        on left: 66 67 68 69
        on right: 18 19 20 63 64 65 67 68 69
    UnaryExp <node_val> (59)
        on left: 70 71 72 73 74 75
        on right: 66 67 68 69 73 74 75
    FuncRParams <node_val> (60)
        on left: 76 77
        on right: 72 77
    PrimaryExp <node_val> (61)
        on left: 78 79 80 81
        on right: 70
    LVal <node_val> (62)
        on left: 82
        on right: 51 79
    Cond <node_val> (63)
        on left: 83
        on right: 54 55 56
    LOrExp <node_val> (64)
        on left: 84 85
        on right: 83 85
    LAndExp <node_val> (65)
        on left: 86 87
        on right: 84 85 87
    EqExp <node_val> (66)
        on left: 88 89 90
        on right: 86 87 89 90
    RelExp <node_val> (67)
        on left: 91 92 93 94 95
        on right: 88 89 90 92 93 94 95
    ExpArray <node_val> (68)
        on left: 96 97
        on right: 40 41 44 45 82 97


State 0

    0 $accept: • Root $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3
    CONST  shift, and go to state 4

    Root       go to state 5
    CompUnit   go to state 6
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9


State 1

   21 VarDecl: INT • VarDef END
   32 FuncDef: INT • IDENT LPARENT RPARENT Block
   35        | INT • IDENT LPARENT FuncFParam RPARENT Block

    IDENT  shift, and go to state 10

    VarDef  go to state 11


State 2

   22 VarDecl: FLOAT • VarDef END
   33 FuncDef: FLOAT • IDENT LPARENT RPARENT Block
   36        | FLOAT • IDENT LPARENT FuncFParam RPARENT Block

    IDENT  shift, and go to state 12

    VarDef  go to state 13


State 3

   34 FuncDef: VOID • IDENT LPARENT RPARENT Block
   37        | VOID • IDENT LPARENT FuncFParam RPARENT Block

    IDENT  shift, and go to state 14


State 4

    8 ConstDecl: CONST • INT ConstDef END
    9          | CONST • FLOAT ConstDef END

    INT    shift, and go to state 15
    FLOAT  shift, and go to state 16


State 5

    0 $accept: Root • $end

    $end  shift, and go to state 17


State 6

    1 Root: CompUnit •

    $default  reduce using rule 1 (Root)


State 7

    2 CompUnit: ConstDecl •
    5         | ConstDecl • CompUnit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3
    CONST  shift, and go to state 4

    $default  reduce using rule 2 (CompUnit)

    CompUnit   go to state 18
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9


State 8

    3 CompUnit: VarDecl •
    6         | VarDecl • CompUnit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3
    CONST  shift, and go to state 4

    $default  reduce using rule 3 (CompUnit)

    CompUnit   go to state 19
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9


State 9

    4 CompUnit: FuncDef •
    7         | FuncDef • CompUnit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3
    CONST  shift, and go to state 4

    $default  reduce using rule 4 (CompUnit)

    CompUnit   go to state 20
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9


State 10

   23 VarDef: IDENT • ConstExpArray
   24       | IDENT • ConstExpArray ASSIGN InitVal
   25       | IDENT • ConstExpArray COMMA VarDef
   26       | IDENT • ConstExpArray ASSIGN InitVal COMMA VarDef
   32 FuncDef: INT IDENT • LPARENT RPARENT Block
   35        | INT IDENT • LPARENT FuncFParam RPARENT Block

    LPARENT   shift, and go to state 21
    LBRACKET  shift, and go to state 22

    $default  reduce using rule 12 (ConstExpArray)

    ConstExpArray  go to state 23


State 11

   21 VarDecl: INT VarDef • END

    END  shift, and go to state 24


State 12

   23 VarDef: IDENT • ConstExpArray
   24       | IDENT • ConstExpArray ASSIGN InitVal
   25       | IDENT • ConstExpArray COMMA VarDef
   26       | IDENT • ConstExpArray ASSIGN InitVal COMMA VarDef
   33 FuncDef: FLOAT IDENT • LPARENT RPARENT Block
   36        | FLOAT IDENT • LPARENT FuncFParam RPARENT Block

    LPARENT   shift, and go to state 25
    LBRACKET  shift, and go to state 22

    $default  reduce using rule 12 (ConstExpArray)

    ConstExpArray  go to state 23


State 13

   22 VarDecl: FLOAT VarDef • END

    END  shift, and go to state 26


State 14

   34 FuncDef: VOID IDENT • LPARENT RPARENT Block
   37        | VOID IDENT • LPARENT FuncFParam RPARENT Block

    LPARENT  shift, and go to state 27


State 15

    8 ConstDecl: CONST INT • ConstDef END

    IDENT  shift, and go to state 28

    ConstDef  go to state 29


State 16

    9 ConstDecl: CONST FLOAT • ConstDef END

    IDENT  shift, and go to state 28

    ConstDef  go to state 30


State 17

    0 $accept: Root $end •

    $default  accept


State 18

    5 CompUnit: ConstDecl CompUnit •

    $default  reduce using rule 5 (CompUnit)


State 19

    6 CompUnit: VarDecl CompUnit •

    $default  reduce using rule 6 (CompUnit)


State 20

    7 CompUnit: FuncDef CompUnit •

    $default  reduce using rule 7 (CompUnit)


State 21

   32 FuncDef: INT IDENT LPARENT • RPARENT Block
   35        | INT IDENT LPARENT • FuncFParam RPARENT Block

    INT      shift, and go to state 31
    FLOAT    shift, and go to state 32
    RPARENT  shift, and go to state 33

    FuncFParam  go to state 34


State 22

   13 ConstExpArray: LBRACKET • ConstExp RBRACKET ConstExpArray

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    ConstExp    go to state 42
    MulExp      go to state 43
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 23

   23 VarDef: IDENT ConstExpArray •
   24       | IDENT ConstExpArray • ASSIGN InitVal
   25       | IDENT ConstExpArray • COMMA VarDef
   26       | IDENT ConstExpArray • ASSIGN InitVal COMMA VarDef

    COMMA   shift, and go to state 47
    ASSIGN  shift, and go to state 48

    $default  reduce using rule 23 (VarDef)


State 24

   21 VarDecl: INT VarDef END •

    $default  reduce using rule 21 (VarDecl)


State 25

   33 FuncDef: FLOAT IDENT LPARENT • RPARENT Block
   36        | FLOAT IDENT LPARENT • FuncFParam RPARENT Block

    INT      shift, and go to state 31
    FLOAT    shift, and go to state 32
    RPARENT  shift, and go to state 49

    FuncFParam  go to state 50


State 26

   22 VarDecl: FLOAT VarDef END •

    $default  reduce using rule 22 (VarDecl)


State 27

   34 FuncDef: VOID IDENT LPARENT • RPARENT Block
   37        | VOID IDENT LPARENT • FuncFParam RPARENT Block

    INT      shift, and go to state 31
    FLOAT    shift, and go to state 32
    RPARENT  shift, and go to state 51

    FuncFParam  go to state 52


State 28

   10 ConstDef: IDENT • ConstExpArray ASSIGN ConstInitVal
   11         | IDENT • ConstExpArray ASSIGN ConstInitVal COMMA ConstDef

    LBRACKET  shift, and go to state 22

    $default  reduce using rule 12 (ConstExpArray)

    ConstExpArray  go to state 53


State 29

    8 ConstDecl: CONST INT ConstDef • END

    END  shift, and go to state 54


State 30

    9 ConstDecl: CONST FLOAT ConstDef • END

    END  shift, and go to state 55


State 31

   38 FuncFParam: INT • IDENT
   40           | INT • IDENT LBRACKET RBRACKET ExpArray
   42           | INT • IDENT COMMA FuncFParam
   44           | INT • IDENT LBRACKET RBRACKET ExpArray COMMA FuncFParam

    IDENT  shift, and go to state 56


State 32

   39 FuncFParam: FLOAT • IDENT
   41           | FLOAT • IDENT LBRACKET RBRACKET ExpArray
   43           | FLOAT • IDENT COMMA FuncFParam
   45           | FLOAT • IDENT LBRACKET RBRACKET ExpArray COMMA FuncFParam

    IDENT  shift, and go to state 57


State 33

   32 FuncDef: INT IDENT LPARENT RPARENT • Block

    LBRACE  shift, and go to state 58

    Block  go to state 59


State 34

   35 FuncDef: INT IDENT LPARENT FuncFParam • RPARENT Block

    RPARENT  shift, and go to state 60


State 35

   71 UnaryExp: IDENT • LPARENT RPARENT
   72         | IDENT • LPARENT FuncRParams RPARENT
   82 LVal: IDENT • ExpArray

    LPARENT   shift, and go to state 61
    LBRACKET  shift, and go to state 62

    $default  reduce using rule 96 (ExpArray)

    ExpArray  go to state 63


State 36

   80 PrimaryExp: INTCONST •

    $default  reduce using rule 80 (PrimaryExp)


State 37

   81 PrimaryExp: FLOATCONST •

    $default  reduce using rule 81 (PrimaryExp)


State 38

   78 PrimaryExp: LPARENT • Exp RPARENT

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Exp         go to state 64
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 39

   74 UnaryExp: MINUS • UnaryExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    UnaryExp    go to state 67
    PrimaryExp  go to state 45
    LVal        go to state 46


State 40

   73 UnaryExp: PLUS • UnaryExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    UnaryExp    go to state 68
    PrimaryExp  go to state 45
    LVal        go to state 46


State 41

   75 UnaryExp: NOT • UnaryExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    UnaryExp    go to state 69
    PrimaryExp  go to state 45
    LVal        go to state 46


State 42

   13 ConstExpArray: LBRACKET ConstExp • RBRACKET ConstExpArray

    RBRACKET  shift, and go to state 70


State 43

   18 ConstExp: MulExp •
   19         | MulExp • PLUS Exp
   20         | MulExp • MINUS Exp

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72

    $default  reduce using rule 18 (ConstExp)


State 44

   66 MulExp: UnaryExp •
   67       | UnaryExp • MUL MulExp
   68       | UnaryExp • DIV MulExp
   69       | UnaryExp • MOD MulExp

    MUL  shift, and go to state 73
    MOD  shift, and go to state 74
    DIV  shift, and go to state 75

    $default  reduce using rule 66 (MulExp)


State 45

   70 UnaryExp: PrimaryExp •

    $default  reduce using rule 70 (UnaryExp)


State 46

   79 PrimaryExp: LVal •

    $default  reduce using rule 79 (PrimaryExp)


State 47

   25 VarDef: IDENT ConstExpArray COMMA • VarDef

    IDENT  shift, and go to state 76

    VarDef  go to state 77


State 48

   24 VarDef: IDENT ConstExpArray ASSIGN • InitVal
   26       | IDENT ConstExpArray ASSIGN • InitVal COMMA VarDef

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 78
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    InitVal     go to state 79
    Exp         go to state 80
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 49

   33 FuncDef: FLOAT IDENT LPARENT RPARENT • Block

    LBRACE  shift, and go to state 58

    Block  go to state 81


State 50

   36 FuncDef: FLOAT IDENT LPARENT FuncFParam • RPARENT Block

    RPARENT  shift, and go to state 82


State 51

   34 FuncDef: VOID IDENT LPARENT RPARENT • Block

    LBRACE  shift, and go to state 58

    Block  go to state 83


State 52

   37 FuncDef: VOID IDENT LPARENT FuncFParam • RPARENT Block

    RPARENT  shift, and go to state 84


State 53

   10 ConstDef: IDENT ConstExpArray • ASSIGN ConstInitVal
   11         | IDENT ConstExpArray • ASSIGN ConstInitVal COMMA ConstDef

    ASSIGN  shift, and go to state 85


State 54

    8 ConstDecl: CONST INT ConstDef END •

    $default  reduce using rule 8 (ConstDecl)


State 55

    9 ConstDecl: CONST FLOAT ConstDef END •

    $default  reduce using rule 9 (ConstDecl)


State 56

   38 FuncFParam: INT IDENT •
   40           | INT IDENT • LBRACKET RBRACKET ExpArray
   42           | INT IDENT • COMMA FuncFParam
   44           | INT IDENT • LBRACKET RBRACKET ExpArray COMMA FuncFParam

    LBRACKET  shift, and go to state 86
    COMMA     shift, and go to state 87

    $default  reduce using rule 38 (FuncFParam)


State 57

   39 FuncFParam: FLOAT IDENT •
   41           | FLOAT IDENT • LBRACKET RBRACKET ExpArray
   43           | FLOAT IDENT • COMMA FuncFParam
   45           | FLOAT IDENT • LBRACKET RBRACKET ExpArray COMMA FuncFParam

    LBRACKET  shift, and go to state 88
    COMMA     shift, and go to state 89

    $default  reduce using rule 39 (FuncFParam)


State 58

   46 Block: LBRACE • BlockItem RBRACE

    error       shift, and go to state 90
    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    INT         shift, and go to state 91
    FLOAT       shift, and go to state 92
    CONST       shift, and go to state 4
    RETURN      shift, and go to state 93
    IF          shift, and go to state 94
    WHILE       shift, and go to state 95
    BREAK       shift, and go to state 96
    CONTINUE    shift, and go to state 97
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 58
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    RBRACE  reduce using rule 47 (BlockItem)

    ConstDecl   go to state 98
    VarDecl     go to state 99
    Block       go to state 100
    BlockItem   go to state 101
    Stmt        go to state 102
    Exp         go to state 103
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 104


State 59

   32 FuncDef: INT IDENT LPARENT RPARENT Block •

    $default  reduce using rule 32 (FuncDef)


State 60

   35 FuncDef: INT IDENT LPARENT FuncFParam RPARENT • Block

    LBRACE  shift, and go to state 58

    Block  go to state 105


State 61

   71 UnaryExp: IDENT LPARENT • RPARENT
   72         | IDENT LPARENT • FuncRParams RPARENT

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    RPARENT     shift, and go to state 106
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Exp          go to state 107
    AddExp       go to state 65
    MulExp       go to state 66
    UnaryExp     go to state 44
    FuncRParams  go to state 108
    PrimaryExp   go to state 45
    LVal         go to state 46


State 62

   97 ExpArray: LBRACKET • Exp RBRACKET ExpArray

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Exp         go to state 109
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 63

   82 LVal: IDENT ExpArray •

    $default  reduce using rule 82 (LVal)


State 64

   78 PrimaryExp: LPARENT Exp • RPARENT

    RPARENT  shift, and go to state 110


State 65

   62 Exp: AddExp •

    $default  reduce using rule 62 (Exp)


State 66

   63 AddExp: MulExp •
   64       | MulExp • PLUS AddExp
   65       | MulExp • MINUS AddExp

    MINUS  shift, and go to state 111
    PLUS   shift, and go to state 112

    $default  reduce using rule 63 (AddExp)


State 67

   74 UnaryExp: MINUS UnaryExp •

    $default  reduce using rule 74 (UnaryExp)


State 68

   73 UnaryExp: PLUS UnaryExp •

    $default  reduce using rule 73 (UnaryExp)


State 69

   75 UnaryExp: NOT UnaryExp •

    $default  reduce using rule 75 (UnaryExp)


State 70

   13 ConstExpArray: LBRACKET ConstExp RBRACKET • ConstExpArray

    LBRACKET  shift, and go to state 22

    $default  reduce using rule 12 (ConstExpArray)

    ConstExpArray  go to state 113


State 71

   20 ConstExp: MulExp MINUS • Exp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Exp         go to state 114
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 72

   19 ConstExp: MulExp PLUS • Exp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Exp         go to state 115
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 73

   67 MulExp: UnaryExp MUL • MulExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    MulExp      go to state 116
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 74

   69 MulExp: UnaryExp MOD • MulExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    MulExp      go to state 117
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 75

   68 MulExp: UnaryExp DIV • MulExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    MulExp      go to state 118
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 76

   23 VarDef: IDENT • ConstExpArray
   24       | IDENT • ConstExpArray ASSIGN InitVal
   25       | IDENT • ConstExpArray COMMA VarDef
   26       | IDENT • ConstExpArray ASSIGN InitVal COMMA VarDef

    LBRACKET  shift, and go to state 22

    $default  reduce using rule 12 (ConstExpArray)

    ConstExpArray  go to state 23


State 77

   25 VarDef: IDENT ConstExpArray COMMA VarDef •

    $default  reduce using rule 25 (VarDef)


State 78

   28 InitVal: LBRACE • RBRACE
   29        | LBRACE • InitVals RBRACE

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 78
    RBRACE      shift, and go to state 119
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    InitVal     go to state 120
    InitVals    go to state 121
    Exp         go to state 80
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 79

   24 VarDef: IDENT ConstExpArray ASSIGN InitVal •
   26       | IDENT ConstExpArray ASSIGN InitVal • COMMA VarDef

    COMMA  shift, and go to state 122

    $default  reduce using rule 24 (VarDef)


State 80

   27 InitVal: Exp •

    $default  reduce using rule 27 (InitVal)


State 81

   33 FuncDef: FLOAT IDENT LPARENT RPARENT Block •

    $default  reduce using rule 33 (FuncDef)


State 82

   36 FuncDef: FLOAT IDENT LPARENT FuncFParam RPARENT • Block

    LBRACE  shift, and go to state 58

    Block  go to state 123


State 83

   34 FuncDef: VOID IDENT LPARENT RPARENT Block •

    $default  reduce using rule 34 (FuncDef)


State 84

   37 FuncDef: VOID IDENT LPARENT FuncFParam RPARENT • Block

    LBRACE  shift, and go to state 58

    Block  go to state 124


State 85

   10 ConstDef: IDENT ConstExpArray ASSIGN • ConstInitVal
   11         | IDENT ConstExpArray ASSIGN • ConstInitVal COMMA ConstDef

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 125
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    ConstInitVal  go to state 126
    ConstExp      go to state 127
    MulExp        go to state 43
    UnaryExp      go to state 44
    PrimaryExp    go to state 45
    LVal          go to state 46


State 86

   40 FuncFParam: INT IDENT LBRACKET • RBRACKET ExpArray
   44           | INT IDENT LBRACKET • RBRACKET ExpArray COMMA FuncFParam

    RBRACKET  shift, and go to state 128


State 87

   42 FuncFParam: INT IDENT COMMA • FuncFParam

    INT    shift, and go to state 31
    FLOAT  shift, and go to state 32

    FuncFParam  go to state 129


State 88

   41 FuncFParam: FLOAT IDENT LBRACKET • RBRACKET ExpArray
   45           | FLOAT IDENT LBRACKET • RBRACKET ExpArray COMMA FuncFParam

    RBRACKET  shift, and go to state 130


State 89

   43 FuncFParam: FLOAT IDENT COMMA • FuncFParam

    INT    shift, and go to state 31
    FLOAT  shift, and go to state 32

    FuncFParam  go to state 131


State 90

   61 Stmt: error •

    $default  reduce using rule 61 (Stmt)


State 91

   21 VarDecl: INT • VarDef END

    IDENT  shift, and go to state 76

    VarDef  go to state 11


State 92

   22 VarDecl: FLOAT • VarDef END

    IDENT  shift, and go to state 76

    VarDef  go to state 13


State 93

   59 Stmt: RETURN • Exp END
   60     | RETURN • END

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    END         shift, and go to state 132
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Exp         go to state 133
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 94

   54 Stmt: IF • LPARENT Cond RPARENT Stmt
   55     | IF • LPARENT Cond RPARENT Stmt ELSE Stmt

    LPARENT  shift, and go to state 134


State 95

   56 Stmt: WHILE • LPARENT Cond RPARENT Stmt

    LPARENT  shift, and go to state 135


State 96

   57 Stmt: BREAK • END

    END  shift, and go to state 136


State 97

   58 Stmt: CONTINUE • END

    END  shift, and go to state 137


State 98

   48 BlockItem: ConstDecl • BlockItem

    error       shift, and go to state 90
    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    INT         shift, and go to state 91
    FLOAT       shift, and go to state 92
    CONST       shift, and go to state 4
    RETURN      shift, and go to state 93
    IF          shift, and go to state 94
    WHILE       shift, and go to state 95
    BREAK       shift, and go to state 96
    CONTINUE    shift, and go to state 97
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 58
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    RBRACE  reduce using rule 47 (BlockItem)

    ConstDecl   go to state 98
    VarDecl     go to state 99
    Block       go to state 100
    BlockItem   go to state 138
    Stmt        go to state 102
    Exp         go to state 103
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 104


State 99

   49 BlockItem: VarDecl • BlockItem

    error       shift, and go to state 90
    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    INT         shift, and go to state 91
    FLOAT       shift, and go to state 92
    CONST       shift, and go to state 4
    RETURN      shift, and go to state 93
    IF          shift, and go to state 94
    WHILE       shift, and go to state 95
    BREAK       shift, and go to state 96
    CONTINUE    shift, and go to state 97
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 58
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    RBRACE  reduce using rule 47 (BlockItem)

    ConstDecl   go to state 98
    VarDecl     go to state 99
    Block       go to state 100
    BlockItem   go to state 139
    Stmt        go to state 102
    Exp         go to state 103
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 104


State 100

   53 Stmt: Block •

    $default  reduce using rule 53 (Stmt)


State 101

   46 Block: LBRACE BlockItem • RBRACE

    RBRACE  shift, and go to state 140


State 102

   50 BlockItem: Stmt • BlockItem

    error       shift, and go to state 90
    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    INT         shift, and go to state 91
    FLOAT       shift, and go to state 92
    CONST       shift, and go to state 4
    RETURN      shift, and go to state 93
    IF          shift, and go to state 94
    WHILE       shift, and go to state 95
    BREAK       shift, and go to state 96
    CONTINUE    shift, and go to state 97
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 58
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    RBRACE  reduce using rule 47 (BlockItem)

    ConstDecl   go to state 98
    VarDecl     go to state 99
    Block       go to state 100
    BlockItem   go to state 141
    Stmt        go to state 102
    Exp         go to state 103
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 104


State 103

   52 Stmt: Exp • END

    END  shift, and go to state 142


State 104

   51 Stmt: LVal • ASSIGN Exp END
   79 PrimaryExp: LVal •

    ASSIGN  shift, and go to state 143

    $default  reduce using rule 79 (PrimaryExp)


State 105

   35 FuncDef: INT IDENT LPARENT FuncFParam RPARENT Block •

    $default  reduce using rule 35 (FuncDef)


State 106

   71 UnaryExp: IDENT LPARENT RPARENT •

    $default  reduce using rule 71 (UnaryExp)


State 107

   76 FuncRParams: Exp •
   77            | Exp • COMMA FuncRParams

    COMMA  shift, and go to state 144

    $default  reduce using rule 76 (FuncRParams)


State 108

   72 UnaryExp: IDENT LPARENT FuncRParams • RPARENT

    RPARENT  shift, and go to state 145


State 109

   97 ExpArray: LBRACKET Exp • RBRACKET ExpArray

    RBRACKET  shift, and go to state 146


State 110

   78 PrimaryExp: LPARENT Exp RPARENT •

    $default  reduce using rule 78 (PrimaryExp)


State 111

   65 AddExp: MulExp MINUS • AddExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 147
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 112

   64 AddExp: MulExp PLUS • AddExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 148
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 113

   13 ConstExpArray: LBRACKET ConstExp RBRACKET ConstExpArray •

    $default  reduce using rule 13 (ConstExpArray)


State 114

   20 ConstExp: MulExp MINUS Exp •

    $default  reduce using rule 20 (ConstExp)


State 115

   19 ConstExp: MulExp PLUS Exp •

    $default  reduce using rule 19 (ConstExp)


State 116

   67 MulExp: UnaryExp MUL MulExp •

    $default  reduce using rule 67 (MulExp)


State 117

   69 MulExp: UnaryExp MOD MulExp •

    $default  reduce using rule 69 (MulExp)


State 118

   68 MulExp: UnaryExp DIV MulExp •

    $default  reduce using rule 68 (MulExp)


State 119

   28 InitVal: LBRACE RBRACE •

    $default  reduce using rule 28 (InitVal)


State 120

   30 InitVals: InitVal •
   31         | InitVal • COMMA InitVals

    COMMA  shift, and go to state 149

    $default  reduce using rule 30 (InitVals)


State 121

   29 InitVal: LBRACE InitVals • RBRACE

    RBRACE  shift, and go to state 150


State 122

   26 VarDef: IDENT ConstExpArray ASSIGN InitVal COMMA • VarDef

    IDENT  shift, and go to state 76

    VarDef  go to state 151


State 123

   36 FuncDef: FLOAT IDENT LPARENT FuncFParam RPARENT Block •

    $default  reduce using rule 36 (FuncDef)


State 124

   37 FuncDef: VOID IDENT LPARENT FuncFParam RPARENT Block •

    $default  reduce using rule 37 (FuncDef)


State 125

   15 ConstInitVal: LBRACE • RBRACE
   16             | LBRACE • ConstInitVal RBRACE
   17             | LBRACE • ConstInitVal COMMA ConstInitVal RBRACE

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 125
    RBRACE      shift, and go to state 152
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    ConstInitVal  go to state 153
    ConstExp      go to state 127
    MulExp        go to state 43
    UnaryExp      go to state 44
    PrimaryExp    go to state 45
    LVal          go to state 46


State 126

   10 ConstDef: IDENT ConstExpArray ASSIGN ConstInitVal •
   11         | IDENT ConstExpArray ASSIGN ConstInitVal • COMMA ConstDef

    COMMA  shift, and go to state 154

    $default  reduce using rule 10 (ConstDef)


State 127

   14 ConstInitVal: ConstExp •

    $default  reduce using rule 14 (ConstInitVal)


State 128

   40 FuncFParam: INT IDENT LBRACKET RBRACKET • ExpArray
   44           | INT IDENT LBRACKET RBRACKET • ExpArray COMMA FuncFParam

    LBRACKET  shift, and go to state 62

    $default  reduce using rule 96 (ExpArray)

    ExpArray  go to state 155


State 129

   42 FuncFParam: INT IDENT COMMA FuncFParam •

    $default  reduce using rule 42 (FuncFParam)


State 130

   41 FuncFParam: FLOAT IDENT LBRACKET RBRACKET • ExpArray
   45           | FLOAT IDENT LBRACKET RBRACKET • ExpArray COMMA FuncFParam

    LBRACKET  shift, and go to state 62

    $default  reduce using rule 96 (ExpArray)

    ExpArray  go to state 156


State 131

   43 FuncFParam: FLOAT IDENT COMMA FuncFParam •

    $default  reduce using rule 43 (FuncFParam)


State 132

   60 Stmt: RETURN END •

    $default  reduce using rule 60 (Stmt)


State 133

   59 Stmt: RETURN Exp • END

    END  shift, and go to state 157


State 134

   54 Stmt: IF LPARENT • Cond RPARENT Stmt
   55     | IF LPARENT • Cond RPARENT Stmt ELSE Stmt

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    Cond        go to state 159
    LOrExp      go to state 160
    LAndExp     go to state 161
    EqExp       go to state 162
    RelExp      go to state 163


State 135

   56 Stmt: WHILE LPARENT • Cond RPARENT Stmt

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    Cond        go to state 164
    LOrExp      go to state 160
    LAndExp     go to state 161
    EqExp       go to state 162
    RelExp      go to state 163


State 136

   57 Stmt: BREAK END •

    $default  reduce using rule 57 (Stmt)


State 137

   58 Stmt: CONTINUE END •

    $default  reduce using rule 58 (Stmt)


State 138

   48 BlockItem: ConstDecl BlockItem •

    $default  reduce using rule 48 (BlockItem)


State 139

   49 BlockItem: VarDecl BlockItem •

    $default  reduce using rule 49 (BlockItem)


State 140

   46 Block: LBRACE BlockItem RBRACE •

    $default  reduce using rule 46 (Block)


State 141

   50 BlockItem: Stmt BlockItem •

    $default  reduce using rule 50 (BlockItem)


State 142

   52 Stmt: Exp END •

    $default  reduce using rule 52 (Stmt)


State 143

   51 Stmt: LVal ASSIGN • Exp END

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Exp         go to state 165
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 144

   77 FuncRParams: Exp COMMA • FuncRParams

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Exp          go to state 107
    AddExp       go to state 65
    MulExp       go to state 66
    UnaryExp     go to state 44
    FuncRParams  go to state 166
    PrimaryExp   go to state 45
    LVal         go to state 46


State 145

   72 UnaryExp: IDENT LPARENT FuncRParams RPARENT •

    $default  reduce using rule 72 (UnaryExp)


State 146

   97 ExpArray: LBRACKET Exp RBRACKET • ExpArray

    LBRACKET  shift, and go to state 62

    $default  reduce using rule 96 (ExpArray)

    ExpArray  go to state 167


State 147

   65 AddExp: MulExp MINUS AddExp •

    $default  reduce using rule 65 (AddExp)


State 148

   64 AddExp: MulExp PLUS AddExp •

    $default  reduce using rule 64 (AddExp)


State 149

   31 InitVals: InitVal COMMA • InitVals

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 78
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    InitVal     go to state 120
    InitVals    go to state 168
    Exp         go to state 80
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46


State 150

   29 InitVal: LBRACE InitVals RBRACE •

    $default  reduce using rule 29 (InitVal)


State 151

   26 VarDef: IDENT ConstExpArray ASSIGN InitVal COMMA VarDef •

    $default  reduce using rule 26 (VarDef)


State 152

   15 ConstInitVal: LBRACE RBRACE •

    $default  reduce using rule 15 (ConstInitVal)


State 153

   16 ConstInitVal: LBRACE ConstInitVal • RBRACE
   17             | LBRACE ConstInitVal • COMMA ConstInitVal RBRACE

    RBRACE  shift, and go to state 169
    COMMA   shift, and go to state 170


State 154

   11 ConstDef: IDENT ConstExpArray ASSIGN ConstInitVal COMMA • ConstDef

    IDENT  shift, and go to state 28

    ConstDef  go to state 171


State 155

   40 FuncFParam: INT IDENT LBRACKET RBRACKET ExpArray •
   44           | INT IDENT LBRACKET RBRACKET ExpArray • COMMA FuncFParam

    COMMA  shift, and go to state 172

    $default  reduce using rule 40 (FuncFParam)


State 156

   41 FuncFParam: FLOAT IDENT LBRACKET RBRACKET ExpArray •
   45           | FLOAT IDENT LBRACKET RBRACKET ExpArray • COMMA FuncFParam

    COMMA  shift, and go to state 173

    $default  reduce using rule 41 (FuncFParam)


State 157

   59 Stmt: RETURN Exp END •

    $default  reduce using rule 59 (Stmt)


State 158

   91 RelExp: AddExp •
   92       | AddExp • LT RelExp
   93       | AddExp • GT RelExp
   94       | AddExp • LE RelExp
   95       | AddExp • GE RelExp

    LT  shift, and go to state 174
    LE  shift, and go to state 175
    GT  shift, and go to state 176
    GE  shift, and go to state 177

    $default  reduce using rule 91 (RelExp)


State 159

   54 Stmt: IF LPARENT Cond • RPARENT Stmt
   55     | IF LPARENT Cond • RPARENT Stmt ELSE Stmt

    RPARENT  shift, and go to state 178


State 160

   83 Cond: LOrExp •

    $default  reduce using rule 83 (Cond)


State 161

   84 LOrExp: LAndExp •
   85       | LAndExp • OR LOrExp

    OR  shift, and go to state 179

    $default  reduce using rule 84 (LOrExp)


State 162

   86 LAndExp: EqExp •
   87        | EqExp • AND LAndExp

    AND  shift, and go to state 180

    $default  reduce using rule 86 (LAndExp)


State 163

   88 EqExp: RelExp •
   89      | RelExp • EQUAL EqExp
   90      | RelExp • NEQUAL EqExp

    NEQUAL  shift, and go to state 181
    EQUAL   shift, and go to state 182

    $default  reduce using rule 88 (EqExp)


State 164

   56 Stmt: WHILE LPARENT Cond • RPARENT Stmt

    RPARENT  shift, and go to state 183


State 165

   51 Stmt: LVal ASSIGN Exp • END

    END  shift, and go to state 184


State 166

   77 FuncRParams: Exp COMMA FuncRParams •

    $default  reduce using rule 77 (FuncRParams)


State 167

   97 ExpArray: LBRACKET Exp RBRACKET ExpArray •

    $default  reduce using rule 97 (ExpArray)


State 168

   31 InitVals: InitVal COMMA InitVals •

    $default  reduce using rule 31 (InitVals)


State 169

   16 ConstInitVal: LBRACE ConstInitVal RBRACE •

    $default  reduce using rule 16 (ConstInitVal)


State 170

   17 ConstInitVal: LBRACE ConstInitVal COMMA • ConstInitVal RBRACE

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 125
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    ConstInitVal  go to state 185
    ConstExp      go to state 127
    MulExp        go to state 43
    UnaryExp      go to state 44
    PrimaryExp    go to state 45
    LVal          go to state 46


State 171

   11 ConstDef: IDENT ConstExpArray ASSIGN ConstInitVal COMMA ConstDef •

    $default  reduce using rule 11 (ConstDef)


State 172

   44 FuncFParam: INT IDENT LBRACKET RBRACKET ExpArray COMMA • FuncFParam

    INT    shift, and go to state 31
    FLOAT  shift, and go to state 32

    FuncFParam  go to state 186


State 173

   45 FuncFParam: FLOAT IDENT LBRACKET RBRACKET ExpArray COMMA • FuncFParam

    INT    shift, and go to state 31
    FLOAT  shift, and go to state 32

    FuncFParam  go to state 187


State 174

   92 RelExp: AddExp LT • RelExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    RelExp      go to state 188


State 175

   94 RelExp: AddExp LE • RelExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    RelExp      go to state 189


State 176

   93 RelExp: AddExp GT • RelExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    RelExp      go to state 190


State 177

   95 RelExp: AddExp GE • RelExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    RelExp      go to state 191


State 178

   54 Stmt: IF LPARENT Cond RPARENT • Stmt
   55     | IF LPARENT Cond RPARENT • Stmt ELSE Stmt

    error       shift, and go to state 90
    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    RETURN      shift, and go to state 93
    IF          shift, and go to state 94
    WHILE       shift, and go to state 95
    BREAK       shift, and go to state 96
    CONTINUE    shift, and go to state 97
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 58
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Block       go to state 100
    Stmt        go to state 192
    Exp         go to state 103
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 104


State 179

   85 LOrExp: LAndExp OR • LOrExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    LOrExp      go to state 193
    LAndExp     go to state 161
    EqExp       go to state 162
    RelExp      go to state 163


State 180

   87 LAndExp: EqExp AND • LAndExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    LAndExp     go to state 194
    EqExp       go to state 162
    RelExp      go to state 163


State 181

   90 EqExp: RelExp NEQUAL • EqExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    EqExp       go to state 195
    RelExp      go to state 163


State 182

   89 EqExp: RelExp EQUAL • EqExp

    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    LPARENT     shift, and go to state 38
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    AddExp      go to state 158
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 46
    EqExp       go to state 196
    RelExp      go to state 163


State 183

   56 Stmt: WHILE LPARENT Cond RPARENT • Stmt

    error       shift, and go to state 90
    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    RETURN      shift, and go to state 93
    IF          shift, and go to state 94
    WHILE       shift, and go to state 95
    BREAK       shift, and go to state 96
    CONTINUE    shift, and go to state 97
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 58
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Block       go to state 100
    Stmt        go to state 197
    Exp         go to state 103
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 104


State 184

   51 Stmt: LVal ASSIGN Exp END •

    $default  reduce using rule 51 (Stmt)


State 185

   17 ConstInitVal: LBRACE ConstInitVal COMMA ConstInitVal • RBRACE

    RBRACE  shift, and go to state 198


State 186

   44 FuncFParam: INT IDENT LBRACKET RBRACKET ExpArray COMMA FuncFParam •

    $default  reduce using rule 44 (FuncFParam)


State 187

   45 FuncFParam: FLOAT IDENT LBRACKET RBRACKET ExpArray COMMA FuncFParam •

    $default  reduce using rule 45 (FuncFParam)


State 188

   92 RelExp: AddExp LT RelExp •

    $default  reduce using rule 92 (RelExp)


State 189

   94 RelExp: AddExp LE RelExp •

    $default  reduce using rule 94 (RelExp)


State 190

   93 RelExp: AddExp GT RelExp •

    $default  reduce using rule 93 (RelExp)


State 191

   95 RelExp: AddExp GE RelExp •

    $default  reduce using rule 95 (RelExp)


State 192

   54 Stmt: IF LPARENT Cond RPARENT Stmt •
   55     | IF LPARENT Cond RPARENT Stmt • ELSE Stmt

    ELSE  shift, and go to state 199

    ELSE      [reduce using rule 54 (Stmt)]
    $default  reduce using rule 54 (Stmt)


State 193

   85 LOrExp: LAndExp OR LOrExp •

    $default  reduce using rule 85 (LOrExp)


State 194

   87 LAndExp: EqExp AND LAndExp •

    $default  reduce using rule 87 (LAndExp)


State 195

   90 EqExp: RelExp NEQUAL EqExp •

    $default  reduce using rule 90 (EqExp)


State 196

   89 EqExp: RelExp EQUAL EqExp •

    $default  reduce using rule 89 (EqExp)


State 197

   56 Stmt: WHILE LPARENT Cond RPARENT Stmt •

    $default  reduce using rule 56 (Stmt)


State 198

   17 ConstInitVal: LBRACE ConstInitVal COMMA ConstInitVal RBRACE •

    $default  reduce using rule 17 (ConstInitVal)


State 199

   55 Stmt: IF LPARENT Cond RPARENT Stmt ELSE • Stmt

    error       shift, and go to state 90
    IDENT       shift, and go to state 35
    INTCONST    shift, and go to state 36
    FLOATCONST  shift, and go to state 37
    RETURN      shift, and go to state 93
    IF          shift, and go to state 94
    WHILE       shift, and go to state 95
    BREAK       shift, and go to state 96
    CONTINUE    shift, and go to state 97
    LPARENT     shift, and go to state 38
    LBRACE      shift, and go to state 58
    MINUS       shift, and go to state 39
    PLUS        shift, and go to state 40
    NOT         shift, and go to state 41

    Block       go to state 100
    Stmt        go to state 200
    Exp         go to state 103
    AddExp      go to state 65
    MulExp      go to state 66
    UnaryExp    go to state 44
    PrimaryExp  go to state 45
    LVal        go to state 104


State 200

   55 Stmt: IF LPARENT Cond RPARENT Stmt ELSE Stmt •

    $default  reduce using rule 55 (Stmt)
